{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nutzv\\\\OneDrive\\\\Desktop\\\\finaaaal\\\\Capstone_Azor\\\\azor\\\\src\\\\components\\\\forms\\\\AdminCompleteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Alert from \"react-bootstrap/esm/Alert\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useBookingsContext } from \"../hooks/useBookingsContext\";\nimport Swal from \"sweetalert2\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminCompleteForm = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    dispatch\n  } = useBookingsContext();\n  const {\n    id,\n    bookingId\n  } = useParams();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  // const [inputField, setInputField] = useState([]);\n\n  const [date, setDate] = useState(\"\");\n  const [first_name, setFirst_name] = useState(\"\");\n  const [last_name, setLast_name] = useState(\"\");\n  const [time_slot, setTimeSlot] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [reg_num, setRegNum] = useState(\"\");\n  const [services, setServices] = useState([]);\n  const [remarks, setRemarks] = useState(\"\");\n  const [costs, setCosts] = useState(\"\");\n  const [mechanic_notes, setMechanic_notes] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const stats = \"Completed\";\n\n  //GET BOOKING DETAILS\n  useEffect(() => {\n    const getBooking = async () => {\n      const response = await fetch(`/api/bookings/admin/${bookingId}`, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      }); // fetch data from the server\n      const json = await response.json(); // pass to a variable to use the data\n\n      // check if response is ok\n      if (response.ok) {\n        let date = new Date(json.date).toISOString().slice(0, 10);\n        setDate(date);\n        setFirst_name(json.first_name);\n        setLast_name(json.last_name);\n        setTimeSlot(json.time_slot);\n        setBrand(json.brand);\n        setModel(json.model);\n        setRegNum(json.reg_num);\n        setServices(json.services);\n        setCosts(json.costs);\n        setRemarks(json.remarks);\n        setLoading(false);\n      }\n    };\n    if (user) {\n      getBooking();\n    }\n  }, [user]);\n\n  // SELECTED SERVICES\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setServices(checked ? [...services, value] : services.filter(item => item !== value));\n  };\n  console.log(services);\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: \"btn btn-success me-3\",\n      cancelButton: \"btn btn-danger\"\n    },\n    buttonsStyling: false\n  });\n  const handleCancel = () => {\n    swalWithBootstrapButtons.fire({\n      title: \"No Changes were made!\"\n    });\n    navigate(`/account/bookings`);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!user) {\n      setError(\"You must be logged in!\");\n      return;\n    }\n    if (!mechanic_notes) {\n      setError(\"Mechanic Notes is required.\");\n    } else {\n      swalWithBootstrapButtons.fire({\n        title: \"Are you sure?\",\n        text: \"Please take note of the changes you are about to make!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, update it!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire(\"Updated!\", `Your appointment with Ref. Num. <strong>${bookingId}</strong> has been updated.`, \"success\");\n          completeBooking();\n        }\n      });\n    }\n  };\n  const completeBooking = async () => {\n    const booking = {\n      stats,\n      mechanic_notes\n    };\n    console.log(booking);\n    const response = await fetch(`/api/bookings/admin/${bookingId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(booking),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      console.log(json.error);\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setServices([]);\n      setMechanic_notes(\"\");\n      setError(null);\n      setEmptyFields([]);\n      console.log(\"Booking updated successfully\", json);\n      // dispatch({ type: \"UPDATE_BOOKING\", payload: json });\n      navigate(`/account/bookings`);\n    }\n  };\n  const serviceList = [{\n    id: 1,\n    service_name: \"Brakes\"\n  }, {\n    id: 2,\n    service_name: \"Change Oil\"\n  }, {\n    id: 3,\n    service_name: \"Tires & Batteries\"\n  }, {\n    id: 4,\n    service_name: \"Maintenance\"\n  }, {\n    id: 5,\n    service_name: \"MOT\"\n  }];\n  console.log(...(services === serviceList.service_name ? \"checked\" : \"\"));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"danger\",\n      size: \"lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-primary\",\n            children: [first_name, \" \", last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 \",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          children: \"Reference Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: bookingId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          controlId: \"date\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"date\",\n            placeholder: \"Date\",\n            min: new Date().toISOString().split(\"T\")[0],\n            onChange: e => setDate(e.target.value),\n            value: date,\n            className: emptyFields.includes(\"date\") ? \"error\" : \"\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          controlId: \"timeSlot\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Prefer Time Slot*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            id: \"time_slot\"\n            // name=\"time_slot\"\n            ,\n            onChange: e => setTimeSlot(e.target.value),\n            value: time_slot,\n            className: emptyFields.includes(\"timeSlot\") ? \"error\" : \"\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"\",\n              children: \"Select Time Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Morning\",\n              children: \"Morning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Afternoon\",\n              children: \"Afternoon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"brand\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Brand*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            id: \"brand\"\n            // name=\"brand\"\n            ,\n            onChange: e => setBrand(e.target.value),\n            value: brand,\n            className: emptyFields.includes(\"brand\") ? \"error\" : \"\",\n            disabled: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"\",\n              children: \"Select Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Honda\",\n              children: \"Honda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Kawasaki\",\n              children: \"Kawasaki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Suzuki\",\n              children: \"Suzuki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Yamaha\",\n              children: \"Yamaha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"model\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Model*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"E.g. Beat, TMX125 Alpha, XRM125 DS\",\n            onChange: e => setModel(e.target.value),\n            value: model,\n            className: emptyFields.includes(\"model\") ? \"error\" : \"\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"reg_num\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Reg Number*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Registration Number\",\n            onChange: e => setRegNum(e.target.value),\n            value: reg_num,\n            className: emptyFields.includes(\"regNum\") ? \"error\" : \"\",\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5 mt-3 formGridCheckbox\",\n        id: \"formGridCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: emptyFields.includes(\"services\") ? \"error \" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-3\",\n              children: \"Services\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 8,\n            children: serviceList.map(service => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              value: service.service_name\n              // onChange={handleSelect}\n              ,\n              label: service.service_name,\n              checked: services.includes(service.service_name) ? true : false,\n              disabled: services.includes(service.service_name) ? false : true\n            }, service.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 4,\n            children: [\"Total Cost:\", \" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Php \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: costs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), !remarks ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"(No other notes from \", first_name, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"fs-5\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 5,\n          onChange: e => setRemarks(e.target.value),\n          value: remarks,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-5 border-top border-primary pt-5\",\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-5\",\n              children: \"Mechanic Recommendations:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              placeholder: \"e.g. \\\"No other recommendations\\\"\",\n              rows: 5,\n              onChange: e => setMechanic_notes(e.target.value),\n              value: mechanic_notes,\n              className: emptyFields.includes(\"mechanic_notes\") ? \"error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"me-4\",\n        variant: \"primary\",\n        size: \"md\",\n        type: \"submit\",\n        children: \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        size: \"md\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(AdminCompleteForm, \"WhDo7B42Bzen+OxkldUh7sZiANk=\", false, function () {\n  return [useAuthContext, useBookingsContext, useParams, useNavigate];\n});\n_c = AdminCompleteForm;\nexport default AdminCompleteForm;\nvar _c;\n$RefreshReg$(_c, \"AdminCompleteForm\");","map":{"version":3,"names":["React","useEffect","useState","Form","Button","Row","Col","Alert","Spinner","useNavigate","useParams","useBookingsContext","Swal","useAuthContext","AdminCompleteForm","user","dispatch","id","bookingId","navigate","loading","setLoading","date","setDate","first_name","setFirst_name","last_name","setLast_name","time_slot","setTimeSlot","brand","setBrand","model","setModel","reg_num","setRegNum","services","setServices","remarks","setRemarks","costs","setCosts","mechanic_notes","setMechanic_notes","error","setError","emptyFields","setEmptyFields","stats","getBooking","response","fetch","headers","Authorization","token","json","ok","Date","toISOString","slice","handleSelect","e","checked","target","value","filter","item","console","log","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","handleCancel","fire","title","handleSubmit","preventDefault","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","completeBooking","booking","method","body","JSON","stringify","serviceList","service_name","split","includes","map","service"],"sources":["C:/Users/nutzv/OneDrive/Desktop/finaaaal/Capstone_Azor/azor/src/components/forms/AdminCompleteForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Alert from \"react-bootstrap/esm/Alert\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useBookingsContext } from \"../hooks/useBookingsContext\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst AdminCompleteForm = () => {\r\n  const { user } = useAuthContext();\r\n  const { dispatch } = useBookingsContext();\r\n  const { id, bookingId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true);\r\n  // const [inputField, setInputField] = useState([]);\r\n\r\n  const [date, setDate] = useState(\"\");\r\n  const [first_name, setFirst_name] = useState(\"\");\r\n  const [last_name, setLast_name] = useState(\"\");\r\n  const [time_slot, setTimeSlot] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [reg_num, setRegNum] = useState(\"\");\r\n  const [services, setServices] = useState([]);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const [costs, setCosts] = useState(\"\");\r\n  const [mechanic_notes, setMechanic_notes] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const stats = \"Completed\";\r\n\r\n  //GET BOOKING DETAILS\r\n  useEffect(() => {\r\n    const getBooking = async () => {\r\n      const response = await fetch(`/api/bookings/admin/${bookingId}`, {\r\n        headers: { Authorization: `Bearer ${user.token}` },\r\n      }); // fetch data from the server\r\n      const json = await response.json(); // pass to a variable to use the data\r\n\r\n      // check if response is ok\r\n      if (response.ok) {\r\n        let date = new Date(json.date).toISOString().slice(0, 10);\r\n        setDate(date);\r\n        setFirst_name(json.first_name);\r\n        setLast_name(json.last_name);\r\n        setTimeSlot(json.time_slot);\r\n        setBrand(json.brand);\r\n        setModel(json.model);\r\n        setRegNum(json.reg_num);\r\n        setServices(json.services);\r\n        setCosts(json.costs);\r\n        setRemarks(json.remarks);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (user) {\r\n      getBooking();\r\n    }\r\n  }, [user]);\r\n\r\n  // SELECTED SERVICES\r\n  const handleSelect = (e) => {\r\n    const checked = e.target.checked;\r\n    const value = e.target.value;\r\n    setServices(\r\n      checked ? [...services, value] : services.filter((item) => item !== value)\r\n    );\r\n  };\r\n  console.log(services);\r\n\r\n  const swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: \"btn btn-success me-3\",\r\n      cancelButton: \"btn btn-danger\",\r\n    },\r\n    buttonsStyling: false,\r\n  });\r\n\r\n  const handleCancel = () => {\r\n    swalWithBootstrapButtons.fire({ title: \"No Changes were made!\" });\r\n    navigate(`/account/bookings`);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError(\"You must be logged in!\");\r\n      return;\r\n    }\r\n\r\n    if (!mechanic_notes) {\r\n      setError(\"Mechanic Notes is required.\");\r\n    } else {\r\n      swalWithBootstrapButtons\r\n        .fire({\r\n          title: \"Are you sure?\",\r\n          text: \"Please take note of the changes you are about to make!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, update it!\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            swalWithBootstrapButtons.fire(\r\n              \"Updated!\",\r\n              `Your appointment with Ref. Num. <strong>${bookingId}</strong> has been updated.`,\r\n              \"success\"\r\n            );\r\n            completeBooking();\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const completeBooking = async () => {\r\n    const booking = {\r\n      stats,\r\n      mechanic_notes,\r\n    };\r\n    console.log(booking);\r\n\r\n    const response = await fetch(`/api/bookings/admin/${bookingId}`, {\r\n      method: \"PATCH\",\r\n      body: JSON.stringify(booking),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      console.log(json.error);\r\n      setError(json.error);\r\n      setEmptyFields(json.emptyFields);\r\n    }\r\n\r\n    if (response.ok) {\r\n      setServices([]);\r\n      setMechanic_notes(\"\");\r\n      setError(null);\r\n      setEmptyFields([]);\r\n      console.log(\"Booking updated successfully\", json);\r\n      // dispatch({ type: \"UPDATE_BOOKING\", payload: json });\r\n      navigate(`/account/bookings`);\r\n    }\r\n  };\r\n  const serviceList = [\r\n    { id: 1, service_name: \"Brakes\" },\r\n    { id: 2, service_name: \"Change Oil\" },\r\n    { id: 3, service_name: \"Tires & Batteries\" },\r\n    { id: 4, service_name: \"Maintenance\" },\r\n    { id: 5, service_name: \"MOT\" },\r\n  ];\r\n\r\n  console.log(...(services === serviceList.service_name ? \"checked\" : \"\"));\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" variant=\"danger\" size=\"lg\" />\r\n      ) : (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row className=\"mb-2 mt-4\">\r\n            <Col sm={12}>Name:</Col>\r\n            <Col>\r\n              <h4 className=\"text-primary\">\r\n                {first_name} {last_name}\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3 \">\r\n            <Col sm={12}>Reference Number:</Col>\r\n            <Col>\r\n              <b>{bookingId}</b>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mb-3\">\r\n            <Form.Group\r\n              as={Col}\r\n              md={6}\r\n              lg={6}\r\n              xl={6}\r\n              controlId=\"date\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Label className=\"fs-5\">Date*</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                name=\"date\"\r\n                placeholder=\"Date\"\r\n                min={new Date().toISOString().split(\"T\")[0]}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                value={date}\r\n                className={emptyFields.includes(\"date\") ? \"error\" : \"\"}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              as={Col}\r\n              md={6}\r\n              lg={6}\r\n              xl={6}\r\n              controlId=\"timeSlot\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Label className=\"fs-5\">Prefer Time Slot*</Form.Label>\r\n              <Form.Select\r\n                id=\"time_slot\"\r\n                // name=\"time_slot\"\r\n                onChange={(e) => setTimeSlot(e.target.value)}\r\n                value={time_slot}\r\n                className={emptyFields.includes(\"timeSlot\") ? \"error\" : \"\"}\r\n                disabled\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Time Slot\r\n                </option>\r\n                <option value=\"Morning\">Morning</option>\r\n                <option value=\"Afternoon\">Afternoon</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Form.Group\r\n              as={Col}\r\n              md={4}\r\n              lg={4}\r\n              xl={4}\r\n              controlId=\"brand\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Label className=\"fs-5\">Brand*</Form.Label>\r\n              <Form.Select\r\n                id=\"brand\"\r\n                // name=\"brand\"\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                value={brand}\r\n                className={emptyFields.includes(\"brand\") ? \"error\" : \"\"}\r\n                disabled\r\n              >\r\n                <option disabled value=\"\">\r\n                  Select Brand\r\n                </option>\r\n                <option value=\"Honda\">Honda</option>\r\n                <option value=\"Kawasaki\">Kawasaki</option>\r\n                <option value=\"Suzuki\">Suzuki</option>\r\n                <option value=\"Yamaha\">Yamaha</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              md={4}\r\n              lg={4}\r\n              xl={4}\r\n              controlId=\"model\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Label className=\"fs-5\">Model*</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"E.g. Beat, TMX125 Alpha, XRM125 DS\"\r\n                onChange={(e) => setModel(e.target.value)}\r\n                value={model}\r\n                className={emptyFields.includes(\"model\") ? \"error\" : \"\"}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n            <Form.Group\r\n              as={Col}\r\n              md={4}\r\n              lg={4}\r\n              xl={4}\r\n              controlId=\"reg_num\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Label className=\"fs-5\">Reg Number*</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Registration Number\"\r\n                onChange={(e) => setRegNum(e.target.value)}\r\n                value={reg_num}\r\n                className={emptyFields.includes(\"regNum\") ? \"error\" : \"\"}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n\r\n          <Form.Group\r\n            className=\"mb-5 mt-3 formGridCheckbox\"\r\n            id=\"formGridCheckbox\"\r\n          >\r\n            <Row className={emptyFields.includes(\"services\") ? \"error \" : \"\"}>\r\n              <Col sm={12}>\r\n                <Form.Label className=\"fs-3\">Services</Form.Label>\r\n              </Col>\r\n              <Col sm={12} md={8}>\r\n                {serviceList.map((service) => (\r\n                  <Form.Check\r\n                    key={service.id}\r\n                    type=\"checkbox\"\r\n                    value={service.service_name}\r\n                    // onChange={handleSelect}\r\n                    label={service.service_name}\r\n                    checked={\r\n                      services.includes(service.service_name) ? true : false\r\n                    }\r\n                    disabled={\r\n                      services.includes(service.service_name) ? false : true\r\n                    }\r\n                  />\r\n                ))}\r\n              </Col>\r\n              <Col sm={12} md={4}>\r\n                Total Cost:{\" \"}\r\n                <h4>\r\n                  Php <span>{costs}</span>\r\n                </h4>\r\n              </Col>\r\n            </Row>\r\n          </Form.Group>\r\n          {!remarks ? (\r\n            <h4>(No other notes from {first_name})</h4>\r\n          ) : (\r\n            <Form.Group className=\"mb-5\">\r\n              <Form.Label className=\"fs-5\">Notes</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={5}\r\n                onChange={(e) => setRemarks(e.target.value)}\r\n                value={remarks}\r\n                disabled\r\n              />\r\n            </Form.Group>\r\n          )}\r\n          <Row className=\"mt-5 border-top border-primary pt-5\">\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Col>\r\n              <Form.Group className=\"mb-5\">\r\n                <Form.Label className=\"fs-5\">\r\n                  Mechanic Recommendations:\r\n                </Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  placeholder='e.g. \"No other recommendations\"'\r\n                  rows={5}\r\n                  onChange={(e) => setMechanic_notes(e.target.value)}\r\n                  value={mechanic_notes}\r\n                  className={\r\n                    emptyFields.includes(\"mechanic_notes\") ? \"error\" : \"\"\r\n                  }\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Button className=\"me-4\" variant=\"primary\" size=\"md\" type=\"submit\">\r\n            Complete\r\n          </Button>\r\n          <Button variant=\"outline-secondary\" size=\"md\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminCompleteForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}