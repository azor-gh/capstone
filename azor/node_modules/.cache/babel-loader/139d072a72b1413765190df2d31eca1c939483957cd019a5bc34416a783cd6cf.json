{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useSignUp = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (first_name, last_name, email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch(\"/api/users/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        first_name,\n        last_name,\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save the user to local storage // token\n      localStorage.setItem(\"user\", JSON.stringify(json));\n\n      //update the auth context\n      dispatch({\n        type: \"LOGIN\",\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n_s(useSignUp, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignUp","error","setError","isLoading","setIsLoading","dispatch","signup","first_name","last_name","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/nutzv/OneDrive/Desktop/finaaaal/Capstone_Azor/azor/src/components/hooks/useSignUp.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useSignUp = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = useAuthContext();\r\n\r\n  const signup = async (first_name, last_name, email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    const response = await fetch(\"/api/users/signup\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ first_name, last_name, email, password }),\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n    if (response.ok) {\r\n      // save the user to local storage // token\r\n      localStorage.setItem(\"user\", JSON.stringify(json));\r\n\r\n      //update the auth context\r\n      dispatch({ type: \"LOGIN\", payload: json });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return { signup, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,MAAM,GAAG,OAAOC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC/DN,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,UAAU;QAAEC,SAAS;QAAEC,KAAK;QAAEC;MAAS,CAAC;IACjE,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChBf,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACgB,IAAI,CAACjB,KAAK,CAAC;IACtB;IACA,IAAIU,QAAQ,CAACQ,EAAE,EAAE;MACf;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAb,QAAQ,CAAC;QAAEiB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAK,CAAC,CAAC;MAC1Cd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EACD,OAAO;IAAEE,MAAM;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAC,GA9BWD,SAAS;EAAA,QAGCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}