{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nutzv\\\\OneDrive\\\\Desktop\\\\finaaaal\\\\Capstone_Azor\\\\azor\\\\src\\\\components\\\\forms\\\\UserBookServiceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Alert from \"react-bootstrap/esm/Alert\";\nimport { useBookingsContext } from \"../hooks/useBookingsContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport Services from \"./Services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserBookServiceForm = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    dispatch\n  } = useBookingsContext();\n  const navigate = useNavigate();\n  const [date, setDate] = useState(\"\");\n  const [time_slot, setTimeSlot] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [reg_num, setRegNum] = useState(\"\");\n  const [services, setServices] = useState([]);\n  const [remarks, setRemarks] = useState(\"\");\n  const [user_phone, setUser_phone] = useState(user.phone);\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const [costs, setTotalCost] = useState(0);\n  const first_name = user.fname;\n  const last_name = user.lname;\n  const mechanic_notes = \"\";\n\n  // SELECTED SERVICES\n  // const handleSelect = (e) => {\n  //   const checked = e.target.checked;\n  //   const value = e.target.value;\n  //   setServices(\n  //     checked ? [...services, value] : services.filter((item) => item !== value)\n  //   );\n  // };\n\n  // SELECTED SERVICES\n  const handleChange = (item, e) => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setServices(checked ? [...services, value] : services.filter(item => item !== value));\n    setTotalCost(checked ? total => total + parseInt(item.price) : total => total - parseInt(item.price));\n    console.log(setTotalCost);\n  };\n  console.log(services);\n  // console.log(services);\n  const swalWithBootstrapButtons = Swal.mixin({\n    customClass: {\n      confirmButton: \"btn btn-success me-3\",\n      cancelButton: \"btn btn-danger\"\n    },\n    buttonsStyling: false\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError(\"You must be logged in!\");\n      return;\n    }\n    console.log(emptyFields);\n    if (!date) {\n      setError(\"Date is required\");\n    } else if (!time_slot) {\n      setError(\"Time Slot is required\");\n    } else if (!user_phone) {\n      setError(\"Phone is required\");\n    } else if (!brand) {\n      setError(\"Brand is required\");\n    } else if (!model) {\n      setError(\"Model is required\");\n    } else if (!reg_num) {\n      setError(\"Registration Number is required\");\n    } else if (services.length === 0) {\n      emptyFields.push(\"services\");\n      setError(\"Please choose a service\");\n    } else {\n      swalWithBootstrapButtons.fire({\n        title: \"Are you sure?\",\n        text: \"Make sure to review the appointment details before submitting!\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, submit booking!\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          swalWithBootstrapButtons.fire(\"Appointment created!\", `You're now booked.`, \"success\");\n          CreateBooking();\n        }\n      });\n    }\n    // }\n  };\n\n  const CreateBooking = async () => {\n    const booking = {\n      date,\n      time_slot,\n      brand,\n      model,\n      reg_num,\n      services,\n      remarks,\n      costs,\n      user_phone,\n      mechanic_notes,\n      first_name,\n      last_name\n    };\n    console.log(booking);\n    const response = await fetch(\"/api/bookings\", {\n      method: \"POST\",\n      body: JSON.stringify(booking),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      console.log(json.error);\n      setError(json.error);\n      setEmptyFields(json.emptyFields);\n    }\n    if (response.ok) {\n      setDate(\"\");\n      setTimeSlot(\"\");\n      setUser_phone(\"\");\n      setBrand(\"\");\n      setModel(\"\");\n      setRegNum(\"\");\n      setServices([]);\n      setRemarks(\"\");\n      setError(null);\n      setEmptyFields([]);\n      dispatch({\n        type: \"CREATE_BOOKING\",\n        payload: json\n      });\n      navigate(`/account/bookings`);\n      console.log(\"New booking added\", json);\n      // console.log(json);\n    }\n  };\n\n  // const serviceList = [\n  //   { id: 1, service_name: \"Brakes\" },\n  //   { id: 2, service_name: \"Change Oil\" },\n  //   { id: 3, service_name: \"Tires & Batteries\" },\n  //   { id: 4, service_name: \"Maintenance\" },\n  //   { id: 5, service_name: \"MOT\" },\n  // ];\n\n  const serviceList = [{\n    id: 1,\n    service_name: \"Brakes\",\n    price: 500\n  }, {\n    id: 2,\n    service_name: \"Change Oil\",\n    price: 1500\n  }, {\n    id: 3,\n    service_name: \"Tires & Batteries\",\n    price: 300\n  }, {\n    id: 4,\n    service_name: \"Maintenance\",\n    price: 3000\n  }, {\n    id: 5,\n    service_name: \"MOT\",\n    price: 1500\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-primary\",\n        children: [user.fname, \" \", user.lname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 mt-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          controlId: \"date\",\n          className: \"mb-3 \",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Date*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            name: \"date\",\n            placeholder: \"Date\",\n            min: new Date().toISOString().split(\"T\")[0],\n            onChange: e => setDate(e.target.value),\n            value: date,\n            className: emptyFields.includes(\"date\") ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          controlId: \"timeSlot\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Prefer Time Slot*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            id: \"time_slot\"\n            // name=\"time_slot\"\n            ,\n            onChange: e => setTimeSlot(e.target.value),\n            value: time_slot,\n            className: emptyFields.includes(\"timeSlot\") ? \"error\" : \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"\",\n              children: \"Select Time Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Morning\",\n              children: \"Morning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Afternoon\",\n              children: \"Afternoon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 6,\n          lg: 6,\n          xl: 6,\n          controlId: \"date\",\n          className: \"mb-3 \",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Phone*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            name: \"user_phone\",\n            placeholder: \"Phone\",\n            onChange: e => setUser_phone(e.target.value),\n            value: user_phone,\n            className: emptyFields.includes(\"user_phone\") ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"brand\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Brand*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            id: \"brand\",\n            name: \"brand\",\n            onChange: e => setBrand(e.target.value),\n            value: brand,\n            className: emptyFields.includes(\"brand\") ? \"error\" : \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"\",\n              children: \"Select Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Honda\",\n              children: \"Honda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Kawasaki\",\n              children: \"Kawasaki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Suzuki\",\n              children: \"Suzuki\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Yamaha\",\n              children: \"Yamaha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"model\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Model*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"E.g. Beat, TMX125 Alpha, XRM125 DS\",\n            onChange: e => setModel(e.target.value),\n            value: model,\n            className: emptyFields.includes(\"model\") ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          md: 4,\n          lg: 4,\n          xl: 4,\n          controlId: \"reg_num\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"fs-5\",\n            children: \"Reg Number*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Registration Number\",\n            onChange: e => setRegNum(e.target.value),\n            value: reg_num,\n            className: emptyFields.includes(\"regNum\") ? \"error\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5 mt-3 formGridCheckbox\",\n        id: \"formGridCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: emptyFields.includes(\"services\") ? \"error \" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fs-3\",\n              children: \"Which type of service would you like to book?*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 8,\n            children: serviceList.map(item => /*#__PURE__*/_jsxDEV(Services, {\n              value: item.service_name,\n              handleChange: handleChange,\n              label: item.service_name,\n              item: item\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 4,\n            children: [\"Total Cost:\", \" \", /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Php \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: costs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"fs-5\",\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 5,\n          onChange: e => setRemarks(e.target.value),\n          value: remarks,\n          placeholder: \"Message (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"md\",\n        className: \"me-4\",\n        type: \"submit\"\n        // onClick={handleSubmit}\n        ,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-secondary\",\n        size: \"md\",\n        onClick: () => {\n          navigate(`/account/bookings`);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UserBookServiceForm, \"Wdq7T2M7rKzUsKUHGqaZrVeXwxk=\", false, function () {\n  return [useAuthContext, useBookingsContext, useNavigate];\n});\n_c = UserBookServiceForm;\nexport default UserBookServiceForm;\nvar _c;\n$RefreshReg$(_c, \"UserBookServiceForm\");","map":{"version":3,"names":["React","useEffect","useState","Form","Button","Row","Col","Alert","useBookingsContext","useNavigate","Swal","useAuthContext","Services","UserBookServiceForm","user","dispatch","navigate","date","setDate","time_slot","setTimeSlot","brand","setBrand","model","setModel","reg_num","setRegNum","services","setServices","remarks","setRemarks","user_phone","setUser_phone","phone","error","setError","emptyFields","setEmptyFields","costs","setTotalCost","first_name","fname","last_name","lname","mechanic_notes","handleChange","item","e","checked","target","value","filter","total","parseInt","price","console","log","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","handleSubmit","preventDefault","length","push","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","CreateBooking","booking","response","fetch","method","body","JSON","stringify","headers","Authorization","token","json","ok","type","payload","serviceList","id","service_name","Date","toISOString","split","includes","map"],"sources":["C:/Users/nutzv/OneDrive/Desktop/finaaaal/Capstone_Azor/azor/src/components/forms/UserBookServiceForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Alert from \"react-bootstrap/esm/Alert\";\r\nimport { useBookingsContext } from \"../hooks/useBookingsContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport Services from \"./Services\";\r\n\r\nconst UserBookServiceForm = () => {\r\n  const { user } = useAuthContext();\r\n  const { dispatch } = useBookingsContext();\r\n  const navigate = useNavigate();\r\n  const [date, setDate] = useState(\"\");\r\n  const [time_slot, setTimeSlot] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [model, setModel] = useState(\"\");\r\n  const [reg_num, setRegNum] = useState(\"\");\r\n  const [services, setServices] = useState([]);\r\n  const [remarks, setRemarks] = useState(\"\");\r\n  const [user_phone, setUser_phone] = useState(user.phone);\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const [costs, setTotalCost] = useState(0);\r\n  const first_name = user.fname;\r\n  const last_name = user.lname;\r\n  const mechanic_notes = \"\";\r\n\r\n  // SELECTED SERVICES\r\n  // const handleSelect = (e) => {\r\n  //   const checked = e.target.checked;\r\n  //   const value = e.target.value;\r\n  //   setServices(\r\n  //     checked ? [...services, value] : services.filter((item) => item !== value)\r\n  //   );\r\n  // };\r\n\r\n  // SELECTED SERVICES\r\n  const handleChange = (item, e) => {\r\n    const checked = e.target.checked;\r\n    const value = e.target.value;\r\n    setServices(\r\n      checked ? [...services, value] : services.filter((item) => item !== value)\r\n    );\r\n    setTotalCost(\r\n      checked\r\n        ? (total) => total + parseInt(item.price)\r\n        : (total) => total - parseInt(item.price)\r\n    );\r\n    console.log(setTotalCost);\r\n  };\r\n\r\n  console.log(services);\r\n  // console.log(services);\r\n  const swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: \"btn btn-success me-3\",\r\n      cancelButton: \"btn btn-danger\",\r\n    },\r\n    buttonsStyling: false,\r\n  });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!user) {\r\n      setError(\"You must be logged in!\");\r\n      return;\r\n    }\r\n    console.log(emptyFields);\r\n    if (!date) {\r\n      setError(\"Date is required\");\r\n    } else if (!time_slot) {\r\n      setError(\"Time Slot is required\");\r\n    } else if (!user_phone) {\r\n      setError(\"Phone is required\");\r\n    } else if (!brand) {\r\n      setError(\"Brand is required\");\r\n    } else if (!model) {\r\n      setError(\"Model is required\");\r\n    } else if (!reg_num) {\r\n      setError(\"Registration Number is required\");\r\n    } else if (services.length === 0) {\r\n      emptyFields.push(\"services\");\r\n      setError(\"Please choose a service\");\r\n    } else {\r\n      swalWithBootstrapButtons\r\n        .fire({\r\n          title: \"Are you sure?\",\r\n          text: \"Make sure to review the appointment details before submitting!\",\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, submit booking!\",\r\n        })\r\n        .then((result) => {\r\n          if (result.isConfirmed) {\r\n            swalWithBootstrapButtons.fire(\r\n              \"Appointment created!\",\r\n              `You're now booked.`,\r\n              \"success\"\r\n            );\r\n            CreateBooking();\r\n          }\r\n        });\r\n    }\r\n    // }\r\n  };\r\n\r\n  const CreateBooking = async () => {\r\n    const booking = {\r\n      date,\r\n      time_slot,\r\n      brand,\r\n      model,\r\n      reg_num,\r\n      services,\r\n      remarks,\r\n      costs,\r\n      user_phone,\r\n      mechanic_notes,\r\n      first_name,\r\n      last_name,\r\n    };\r\n    console.log(booking);\r\n\r\n    const response = await fetch(\"/api/bookings\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(booking),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${user.token}`,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      console.log(json.error);\r\n      setError(json.error);\r\n      setEmptyFields(json.emptyFields);\r\n    }\r\n\r\n    if (response.ok) {\r\n      setDate(\"\");\r\n      setTimeSlot(\"\");\r\n      setUser_phone(\"\");\r\n      setBrand(\"\");\r\n      setModel(\"\");\r\n      setRegNum(\"\");\r\n      setServices([]);\r\n      setRemarks(\"\");\r\n      setError(null);\r\n      setEmptyFields([]);\r\n      dispatch({ type: \"CREATE_BOOKING\", payload: json });\r\n      navigate(`/account/bookings`);\r\n      console.log(\"New booking added\", json);\r\n      // console.log(json);\r\n    }\r\n  };\r\n\r\n  // const serviceList = [\r\n  //   { id: 1, service_name: \"Brakes\" },\r\n  //   { id: 2, service_name: \"Change Oil\" },\r\n  //   { id: 3, service_name: \"Tires & Batteries\" },\r\n  //   { id: 4, service_name: \"Maintenance\" },\r\n  //   { id: 5, service_name: \"MOT\" },\r\n  // ];\r\n\r\n  const serviceList = [\r\n    { id: 1, service_name: \"Brakes\", price: 500 },\r\n    { id: 2, service_name: \"Change Oil\", price: 1500 },\r\n    { id: 3, service_name: \"Tires & Batteries\", price: 300 },\r\n    { id: 4, service_name: \"Maintenance\", price: 3000 },\r\n    { id: 5, service_name: \"MOT\", price: 1500 },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {/* BOOKING FORM */}\r\n      <Form onSubmit={handleSubmit}>\r\n        <small>Name: </small>\r\n        <h4 className=\"text-primary\">\r\n          {user.fname} {user.lname}\r\n        </h4>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n        <Row className=\"mb-3 mt-3\">\r\n          <Form.Group\r\n            as={Col}\r\n            md={6}\r\n            lg={6}\r\n            xl={6}\r\n            controlId=\"date\"\r\n            className=\"mb-3 \"\r\n          >\r\n            <Form.Label className=\"fs-5\">Date*</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              name=\"date\"\r\n              placeholder=\"Date\"\r\n              min={new Date().toISOString().split(\"T\")[0]}\r\n              onChange={(e) => setDate(e.target.value)}\r\n              value={date}\r\n              className={emptyFields.includes(\"date\") ? \"error\" : \"\"}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group\r\n            as={Col}\r\n            md={6}\r\n            lg={6}\r\n            xl={6}\r\n            controlId=\"timeSlot\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Label className=\"fs-5\">Prefer Time Slot*</Form.Label>\r\n            <Form.Select\r\n              id=\"time_slot\"\r\n              // name=\"time_slot\"\r\n              onChange={(e) => setTimeSlot(e.target.value)}\r\n              value={time_slot}\r\n              className={emptyFields.includes(\"timeSlot\") ? \"error\" : \"\"}\r\n            >\r\n              <option disabled value=\"\">\r\n                Select Time Slot\r\n              </option>\r\n              <option value=\"Morning\">Morning</option>\r\n              <option value=\"Afternoon\">Afternoon</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n        </Row>\r\n        <Row className=\"mb-3 \">\r\n          <Form.Group\r\n            as={Col}\r\n            md={6}\r\n            lg={6}\r\n            xl={6}\r\n            controlId=\"date\"\r\n            className=\"mb-3 \"\r\n          >\r\n            <Form.Label className=\"fs-5\">Phone*</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"user_phone\"\r\n              placeholder=\"Phone\"\r\n              onChange={(e) => setUser_phone(e.target.value)}\r\n              value={user_phone}\r\n              className={emptyFields.includes(\"user_phone\") ? \"error\" : \"\"}\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n        <Row>\r\n          <Form.Group\r\n            as={Col}\r\n            md={4}\r\n            lg={4}\r\n            xl={4}\r\n            controlId=\"brand\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Label className=\"fs-5\">Brand*</Form.Label>\r\n            <Form.Select\r\n              id=\"brand\"\r\n              name=\"brand\"\r\n              onChange={(e) => setBrand(e.target.value)}\r\n              value={brand}\r\n              className={emptyFields.includes(\"brand\") ? \"error\" : \"\"}\r\n            >\r\n              <option disabled value=\"\">\r\n                Select Brand\r\n              </option>\r\n              <option value=\"Honda\">Honda</option>\r\n              <option value=\"Kawasaki\">Kawasaki</option>\r\n              <option value=\"Suzuki\">Suzuki</option>\r\n              <option value=\"Yamaha\">Yamaha</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <Form.Group\r\n            as={Col}\r\n            md={4}\r\n            lg={4}\r\n            xl={4}\r\n            controlId=\"model\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Label className=\"fs-5\">Model*</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"E.g. Beat, TMX125 Alpha, XRM125 DS\"\r\n              onChange={(e) => setModel(e.target.value)}\r\n              value={model}\r\n              className={emptyFields.includes(\"model\") ? \"error\" : \"\"}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group\r\n            as={Col}\r\n            md={4}\r\n            lg={4}\r\n            xl={4}\r\n            controlId=\"reg_num\"\r\n            className=\"mb-3\"\r\n          >\r\n            <Form.Label className=\"fs-5\">Reg Number*</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Registration Number\"\r\n              onChange={(e) => setRegNum(e.target.value)}\r\n              value={reg_num}\r\n              className={emptyFields.includes(\"regNum\") ? \"error\" : \"\"}\r\n            />\r\n          </Form.Group>\r\n        </Row>\r\n\r\n        <Form.Group\r\n          className=\"mb-5 mt-3 formGridCheckbox\"\r\n          id=\"formGridCheckbox\"\r\n        >\r\n          <Row className={emptyFields.includes(\"services\") ? \"error \" : \"\"}>\r\n            <Col sm={12}>\r\n              <Form.Label className=\"fs-3\">\r\n                Which type of service would you like to book?*\r\n              </Form.Label>\r\n            </Col>\r\n            {/* <Col sm={12} md={8}>\r\n              {serviceList.map((service) => (\r\n                <Form.Check\r\n                  key={service.id}\r\n                  type=\"checkbox\"\r\n                  name=\"services\"\r\n                  value={service.service_name}\r\n                  onChange={handleChange}\r\n                  label={service.service_name}\r\n                />\r\n              ))}\r\n            </Col> */}\r\n            <Col sm={12} md={8}>\r\n              {serviceList.map((item) => (\r\n                <Services\r\n                  key={item.id}\r\n                  value={item.service_name}\r\n                  handleChange={handleChange}\r\n                  label={item.service_name}\r\n                  item={item}\r\n                />\r\n              ))}\r\n            </Col>\r\n            <Col sm={12} md={4}>\r\n              Total Cost:{\" \"}\r\n              <h4>\r\n                Php <span>{costs}</span>\r\n              </h4>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-5\">\r\n          <Form.Label className=\"fs-5\">Notes</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={5}\r\n            onChange={(e) => setRemarks(e.target.value)}\r\n            value={remarks}\r\n            placeholder=\"Message (Optional)\"\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"md\"\r\n          className=\"me-4\"\r\n          type=\"submit\"\r\n          // onClick={handleSubmit}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"outline-secondary\"\r\n          size=\"md\"\r\n          onClick={() => {\r\n            navigate(`/account/bookings`);\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserBookServiceForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}