{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nutzv\\\\OneDrive\\\\Desktop\\\\finaaaal\\\\Capstone_Azor\\\\azor\\\\src\\\\components\\\\forms\\\\AddUserAdminForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from \"react-bootstrap/esm/Col\";\nimport Row from \"react-bootstrap/esm/Row\";\nimport Form from \"react-bootstrap/Form\";\nimport { useParams } from \"react-router-dom\";\nimport Avatar from \"../../assets/media/images/Avatar.png\";\nimport Swal from \"sweetalert2\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useUsersContext } from \"../hooks/useUsersContext\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddUserAdminForm = () => {\n  _s();\n  const {\n    dispatch: userDispatch\n  } = useUsersContext();\n  const {\n    user\n  } = useAuthContext();\n  const {\n    id\n  } = useParams();\n  const [first_name, setFirst_name] = useState(\"\");\n  const [last_name, setLast_name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirm_password, setConfirm_password] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [emptyFields, setEmptyFields] = useState([]);\n  const isAdmin = true;\n\n  // const swalWithBootstrapButtons = Swal.mixin({\n  //   customClass: {\n  //     confirmButton: \"btn btn-success me-3\",\n  //     cancelButton: \"btn btn-danger\",\n  //   },\n  //   buttonsStyling: false,\n  // });\n\n  //// VALIDATIONS ///\n  const isRequired = value => value == \"\" ? true : false;\n  const isBetween = (length, min, max) => length >= min && length <= max ? true : false;\n  // const isEmailValid = (email) => {\n  //   let emailPattern = new RegExp(\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  //   );\n  //   return emailPattern.test(email);\n  // };\n\n  const isPasswordValid = password => {\n    let passwordPattern = new RegExp(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/);\n    return passwordPattern.test(password);\n  };\n  const isLettersOnly = name => {\n    let namePattern = new RegExp(/^[A-Za-z\\s]*$/);\n    return namePattern.test(name);\n  };\n  // const isNumbersOnly = (zip) => {\n  //   let zipPattern = new RegExp(/^\\d+$/);\n  //   return zipPattern.test(zip);\n  // };\n  ///////////\n\n  const checkFirstName = () => {\n    if (isRequired(first_name)) {\n      setError(\"First name is required\");\n      return false;\n    } else if (!isLettersOnly(first_name)) {\n      setError(\"First name must be letters only\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const checkLastName = () => {\n    if (isRequired(last_name)) {\n      setError(\"Last name is required\");\n      return false;\n    } else if (!isLettersOnly(last_name)) {\n      setError(\"Last name must be letters only\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // const checkEmail = () => {\n  //   if (isRequired(email)) {\n  //     setError(\"Email is required\");\n  //     return false;\n  //   } else if (!isEmailValid(email)) {\n  //     setError(\"Email is not valid\");\n  //     return false;\n  //   } else {\n  //     return true;\n  //   }\n  // };\n\n  const checkPassword = () => {\n    const min = 8;\n    const max = 30;\n    if (isRequired(password)) {\n      setError(\"Password is required\");\n      return false;\n    } else if (!isBetween(password.length, min, max)) {\n      setError(\"Password must be 8 to 30 characters long\");\n      return false;\n    } else if (!isPasswordValid(password)) {\n      setError(\"Password must have at least one number and one special character.\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n  const checkConfirmPass = () => {\n    if (isRequired(confirm_password)) {\n      setError(\"Confirm password is required\");\n      return false;\n    } else if (confirm_password !== password) {\n      setError(\"Password does not match\");\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   if (!user) {\n  //     setError(\"You must be logged in!\");\n  //     return;\n  //   }\n\n  //   if (\n  //     checkFirstName() === true &&\n  //     checkLastName() === true &&\n  //     checkEmail() === true &&\n  //     checkPassword() === true &&\n  //     checkConfirmPass() === true\n  //   ) {\n  //     swalWithBootstrapButtons\n  //       .fire({\n  //         title: \"Are you sure?\",\n  //         text: \"Make sure to review the user details before submitting!\",\n  //         icon: \"warning\",\n  //         showCancelButton: true,\n  //         confirmButtonColor: \"#3085d6\",\n  //         cancelButtonColor: \"#d33\",\n  //         confirmButtonText: \"Yes, add user!\",\n  //       })\n  //       .then((result) => {\n  //         if (result.isConfirmed) {\n  //           swalWithBootstrapButtons.fire(\n  //             \"New user created!\",\n  //             \"You may now login.\",\n  //             \"success\"\n  //           );\n  //           addUser();\n  //         }\n  //       });\n  //   }\n  // };\n\n  const Toast = Swal.mixin({\n    toast: true,\n    position: \"top-end\",\n    showConfirmButton: false,\n    timer: 3000,\n    timerProgressBar: true,\n    didOpen: toast => {\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n    }\n  });\n  const addUser = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError(\"You must be logged in!\");\n      return;\n    }\n    if (checkFirstName() === true && checkLastName() === true &&\n    // checkEmail() === true &&\n    checkPassword() === true && checkConfirmPass() === true) {\n      const userInfo = {\n        first_name,\n        last_name,\n        isAdmin,\n        email,\n        password,\n        picture\n      };\n      console.log(userInfo);\n      const response = await fetch(\"/api/users/create\", {\n        method: \"POST\",\n        body: JSON.stringify(userInfo),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (!response.ok) {\n        console.log(json.error);\n        setError(json.error);\n        setEmptyFields(json.emptyFields);\n      }\n      if (response.ok) {\n        Toast.fire({\n          icon: \"success\",\n          title: \"New user created\"\n        });\n        setPicture(\"\");\n        setFirst_name(\"\");\n        setLast_name(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirm_password([]);\n        setError(null);\n        setEmptyFields([]);\n      }\n      userDispatch({\n        type: \"CREATE_USER\",\n        payload: json\n      });\n      console.log(\"New Admin user added\", json);\n      // console.log(json);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: addUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5 d-flex flex-column align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Avatar,\n          alt: \"Avatar\",\n          className: \"\",\n          style: {\n            borderRadius: \"50%\",\n            width: \"100px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"upload\",\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload\",\n          className: \"btn-secondary mt-2\",\n          children: \"Upload image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-5\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-4\",\n            controlId: \"first_name\",\n            as: Col,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fw-bold\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"First Name\",\n              name: \"first_name\",\n              onChange: e => setFirst_name(e.target.value),\n              value: first_name\n              // className={emptyFields.includes(\"first_name\") ? \"error\" : \"\"}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"last_name\",\n            as: Col,\n            md: 6,\n            lg: 6,\n            xl: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fw-bold\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Last Name\",\n              name: \"last_name\",\n              onChange: e => setLast_name(e.target.value),\n              value: last_name\n              // className={emptyFields.includes(\"last_name\") ? \"error\" : \"\"}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            as: Col,\n            md: 6,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"fw-bold\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              name: \"email\",\n              onChange: e => setEmail(e.target.value),\n              value: email\n              // className={emptyFields.includes(\"email\") ? \"error\" : \"\"}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"password\",\n              onChange: e => setPassword(e.target.value),\n              value: password\n              // className={emptyFields.includes(\"password\") ? \"error\" : \"\"}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirm_password\",\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"fw-bold\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              name: \"confirm_password\",\n              onChange: e => setConfirm_password(e.target.value),\n              value: confirm_password\n              // className={\n              //   emptyFields.includes(\"confirm_password\") ? \"error\" : \"\"\n              // }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddUserAdminForm, \"OLCJOznuF6LtZb7gYxqWgcNzQxw=\", false, function () {\n  return [useUsersContext, useAuthContext, useParams];\n});\n_c = AddUserAdminForm;\nexport default AddUserAdminForm;\nvar _c;\n$RefreshReg$(_c, \"AddUserAdminForm\");","map":{"version":3,"names":["React","useState","Button","Col","Row","Form","useParams","Avatar","Swal","useAuthContext","useUsersContext","Alert","AddUserAdminForm","dispatch","userDispatch","user","id","first_name","setFirst_name","last_name","setLast_name","email","setEmail","password","setPassword","confirm_password","setConfirm_password","picture","setPicture","error","setError","emptyFields","setEmptyFields","isAdmin","isRequired","value","isBetween","length","min","max","isPasswordValid","passwordPattern","RegExp","test","isLettersOnly","name","namePattern","checkFirstName","checkLastName","checkPassword","checkConfirmPass","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","addUser","e","preventDefault","userInfo","console","log","response","fetch","method","body","JSON","stringify","headers","Authorization","token","json","ok","fire","icon","title","type","payload","borderRadius","width","target"],"sources":["C:/Users/nutzv/OneDrive/Desktop/finaaaal/Capstone_Azor/azor/src/components/forms/AddUserAdminForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport Row from \"react-bootstrap/esm/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Avatar from \"../../assets/media/images/Avatar.png\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\nimport { useUsersContext } from \"../hooks/useUsersContext\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst AddUserAdminForm = () => {\r\n  const { dispatch: userDispatch } = useUsersContext();\r\n  const { user } = useAuthContext();\r\n  const { id } = useParams();\r\n  const [first_name, setFirst_name] = useState(\"\");\r\n  const [last_name, setLast_name] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm_password, setConfirm_password] = useState(\"\");\r\n  const [picture, setPicture] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [emptyFields, setEmptyFields] = useState([]);\r\n  const isAdmin = true;\r\n\r\n  // const swalWithBootstrapButtons = Swal.mixin({\r\n  //   customClass: {\r\n  //     confirmButton: \"btn btn-success me-3\",\r\n  //     cancelButton: \"btn btn-danger\",\r\n  //   },\r\n  //   buttonsStyling: false,\r\n  // });\r\n\r\n  //// VALIDATIONS ///\r\n  const isRequired = (value) => (value == \"\" ? true : false);\r\n  const isBetween = (length, min, max) =>\r\n    length >= min && length <= max ? true : false;\r\n  // const isEmailValid = (email) => {\r\n  //   let emailPattern = new RegExp(\r\n  //     /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  //   );\r\n  //   return emailPattern.test(email);\r\n  // };\r\n\r\n  const isPasswordValid = (password) => {\r\n    let passwordPattern = new RegExp(\r\n      /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n    );\r\n    return passwordPattern.test(password);\r\n  };\r\n\r\n  const isLettersOnly = (name) => {\r\n    let namePattern = new RegExp(/^[A-Za-z\\s]*$/);\r\n    return namePattern.test(name);\r\n  };\r\n  // const isNumbersOnly = (zip) => {\r\n  //   let zipPattern = new RegExp(/^\\d+$/);\r\n  //   return zipPattern.test(zip);\r\n  // };\r\n  ///////////\r\n\r\n  const checkFirstName = () => {\r\n    if (isRequired(first_name)) {\r\n      setError(\"First name is required\");\r\n      return false;\r\n    } else if (!isLettersOnly(first_name)) {\r\n      setError(\"First name must be letters only\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkLastName = () => {\r\n    if (isRequired(last_name)) {\r\n      setError(\"Last name is required\");\r\n      return false;\r\n    } else if (!isLettersOnly(last_name)) {\r\n      setError(\"Last name must be letters only\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // const checkEmail = () => {\r\n  //   if (isRequired(email)) {\r\n  //     setError(\"Email is required\");\r\n  //     return false;\r\n  //   } else if (!isEmailValid(email)) {\r\n  //     setError(\"Email is not valid\");\r\n  //     return false;\r\n  //   } else {\r\n  //     return true;\r\n  //   }\r\n  // };\r\n\r\n  const checkPassword = () => {\r\n    const min = 8;\r\n    const max = 30;\r\n    if (isRequired(password)) {\r\n      setError(\"Password is required\");\r\n      return false;\r\n    } else if (!isBetween(password.length, min, max)) {\r\n      setError(\"Password must be 8 to 30 characters long\");\r\n      return false;\r\n    } else if (!isPasswordValid(password)) {\r\n      setError(\r\n        \"Password must have at least one number and one special character.\"\r\n      );\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const checkConfirmPass = () => {\r\n    if (isRequired(confirm_password)) {\r\n      setError(\"Confirm password is required\");\r\n      return false;\r\n    } else if (confirm_password !== password) {\r\n      setError(\"Password does not match\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (!user) {\r\n  //     setError(\"You must be logged in!\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (\r\n  //     checkFirstName() === true &&\r\n  //     checkLastName() === true &&\r\n  //     checkEmail() === true &&\r\n  //     checkPassword() === true &&\r\n  //     checkConfirmPass() === true\r\n  //   ) {\r\n  //     swalWithBootstrapButtons\r\n  //       .fire({\r\n  //         title: \"Are you sure?\",\r\n  //         text: \"Make sure to review the user details before submitting!\",\r\n  //         icon: \"warning\",\r\n  //         showCancelButton: true,\r\n  //         confirmButtonColor: \"#3085d6\",\r\n  //         cancelButtonColor: \"#d33\",\r\n  //         confirmButtonText: \"Yes, add user!\",\r\n  //       })\r\n  //       .then((result) => {\r\n  //         if (result.isConfirmed) {\r\n  //           swalWithBootstrapButtons.fire(\r\n  //             \"New user created!\",\r\n  //             \"You may now login.\",\r\n  //             \"success\"\r\n  //           );\r\n  //           addUser();\r\n  //         }\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: \"top-end\",\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n      toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n      toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n    },\r\n  });\r\n\r\n  const addUser = async (e) => {\r\n    e.preventDefault();\r\n    if (!user) {\r\n      setError(\"You must be logged in!\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      checkFirstName() === true &&\r\n      checkLastName() === true &&\r\n      // checkEmail() === true &&\r\n      checkPassword() === true &&\r\n      checkConfirmPass() === true\r\n    ) {\r\n      const userInfo = {\r\n        first_name,\r\n        last_name,\r\n        isAdmin,\r\n        email,\r\n        password,\r\n        picture,\r\n      };\r\n      console.log(userInfo);\r\n\r\n      const response = await fetch(\"/api/users/create\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(userInfo),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${user.token}`,\r\n        },\r\n      });\r\n      const json = await response.json();\r\n\r\n      if (!response.ok) {\r\n        console.log(json.error);\r\n        setError(json.error);\r\n        setEmptyFields(json.emptyFields);\r\n      }\r\n\r\n      if (response.ok) {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"New user created\",\r\n        });\r\n        setPicture(\"\");\r\n        setFirst_name(\"\");\r\n        setLast_name(\"\");\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setConfirm_password([]);\r\n        setError(null);\r\n        setEmptyFields([]);\r\n      }\r\n      userDispatch({ type: \"CREATE_USER\", payload: json });\r\n      console.log(\"New Admin user added\", json);\r\n      // console.log(json);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={addUser}>\r\n        <div className=\"mt-5 d-flex flex-column align-items-center\">\r\n          <img\r\n            src={Avatar}\r\n            alt=\"Avatar\"\r\n            className=\"\"\r\n            style={{ borderRadius: \"50%\", width: \"100px\" }}\r\n          />\r\n\r\n          <input type=\"file\" id=\"upload\" hidden />\r\n          <label htmlFor=\"upload\" className=\"btn-secondary mt-2\">\r\n            Upload image\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"py-5\">\r\n          <Row className=\"mb-4\">\r\n            <Form.Group\r\n              className=\"mb-4\"\r\n              controlId=\"first_name\"\r\n              as={Col}\r\n              md={6}\r\n              lg={6}\r\n              xl={6}\r\n            >\r\n              <Form.Label className=\"fw-bold\">First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                name=\"first_name\"\r\n                onChange={(e) => setFirst_name(e.target.value)}\r\n                value={first_name}\r\n                // className={emptyFields.includes(\"first_name\") ? \"error\" : \"\"}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"last_name\" as={Col} md={6} lg={6} xl={6}>\r\n              <Form.Label className=\"fw-bold\">Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n                name=\"last_name\"\r\n                onChange={(e) => setLast_name(e.target.value)}\r\n                value={last_name}\r\n                // className={emptyFields.includes(\"last_name\") ? \"error\" : \"\"}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row className=\"mb-4\">\r\n            <Form.Group controlId=\"email\" as={Col} md={6}>\r\n              <Form.Label className=\"fw-bold\">Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                // className={emptyFields.includes(\"email\") ? \"error\" : \"\"}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row className=\"mb-4\">\r\n            <Form.Group controlId=\"password\" as={Col}>\r\n              <div className=\"d-flex\">\r\n                <Form.Label className=\"fw-bold\">Password</Form.Label>\r\n              </div>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                value={password}\r\n                // className={emptyFields.includes(\"password\") ? \"error\" : \"\"}\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          <Row className=\"mb-4\">\r\n            <Form.Group controlId=\"confirm_password\" as={Col}>\r\n              <div className=\"d-flex\">\r\n                <Form.Label className=\"fw-bold\">Confirm Password</Form.Label>\r\n              </div>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"confirm_password\"\r\n                onChange={(e) => setConfirm_password(e.target.value)}\r\n                value={confirm_password}\r\n                // className={\r\n                //   emptyFields.includes(\"confirm_password\") ? \"error\" : \"\"\r\n                // }\r\n              />\r\n            </Form.Group>\r\n          </Row>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        </div>\r\n\r\n        <Button type=\"submit\">Add User</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUserAdminForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}